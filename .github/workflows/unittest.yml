on: [push]
name: unittest

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install APT packages
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -yq install \
        libssh2-1-dev \
        libboost-all-dev
    - name: Set conditional environment variables
      if: matrix.compiler == 'clang'
      run: |
        echo "CC=clang" >> $GITHUB_ENV
        echo "CXX=clang++" >> $GITHUB_ENV
    - name: Configure
      run: cmake -B build
    - name: Build
      run: cmake --build build/
    - name: Run tests
      working-directory: build
      run: ctest
      env:
        CTEST_OUTPUT_ON_FAILURE: True

  macos:
    strategy:
      fail-fast: false

    runs-on: macos-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install homebrew packages
      run: |
        brew install libssh2
        brew install boost
    - name: Configure
      run: cmake -B build
    - name: Build
      run: cmake --build build/
    - name: Run tests
      working-directory: build
      run: ctest
      env:
        CTEST_OUTPUT_ON_FAILURE: True

  windows:
    strategy:
      fail-fast: false

    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout libssh2
      uses: actions/checkout@v4
      with:
        repository: libssh2/libssh2
        ref: libssh2-1.11.0
        path: libssh2
    - name: Build and install libssh2
      working-directory: libssh2
      run: |
        cmake -DCRYPTO_BACKEND="WinCNG" -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF -DBUILD_SHARED_LIBS=OFF -Bbuild
        cmake --build build --config Release
        cmake --install build --config Release --prefix=c:/libssh2
    - name: Install boost
      uses: MarkusJx/install-boost@v2.4.5
      id: install-boost
      with:
        toolset: msvc
        platform_version: 2022
        boost_version: 1.84.0
        boost_install_dir: c:/boost
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Configure
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
      run: |
        cmake -DLibssh2_ROOT=c:/libssh2 -B build
    - name: Build
      working-directory: build
      run: cmake --build . --config Release
    - name: Run tests
      working-directory: build
      run: ctest -C Release
      env:
        CTEST_OUTPUT_ON_FAILURE: True
